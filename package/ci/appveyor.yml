version: '{branch}-{build}'
branches:
  only:
  - master
  - compatibility
skip_tags: true
shallow_clone: true
clone_depth: 1
environment:
  matrix:
  - BUILD_STATIC: OFF
install:
- cinst ninja
build_script:
- set PATH=C:/Sys/bin;C:/tools/ninja;%PATH%
- call "C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/vcvarsall.bat"
- appveyor DownloadFile http://static.oculus.com/sdk-downloads/0.7.0.0/Public/1440610361/ovr_sdk_win_0.7.0.0.zip
- 7z x ovr_sdk_win_0.7.0.0.zip
- git clone --branch compatibility --depth 1 git://github.com/mosra/corrade.git
- cd corrade
- mkdir build
- cd build
- cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:/Sys -DBUILD_STATIC=%BUILD_STATIC% -G Ninja
- cmake --build .
- cmake --build . --target install
- cd ..
- cd ..
- git clone --branch compatibility --depth 1 git://github.com/mosra/magnum.git
- cd magnum
- mkdir build
- cd build
- cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:/Sys -DWITH_AUDIO=OFF -DWITH_DEBUGTOOLS=OFF -DWITH_PRIMITIVES=OFF -DWITH_SCENEGRAPH=ON -DWITH_SHADERS=OFF -DWITH_SHAPES=OFF -DWITH_TEXT=OFF -DWITH_TEXTURETOOLS=OFF -DBUILD_STATIC=%BUILD_STATIC% -G Ninja
- cmake --build .
- cmake --build . --target install
- cd ..
- cd ..
- mkdir build
- cd build
- cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:/Sys -DOVR_INCLUDE_DIR=%APPVEYOR_BUILD_FOLDER%/OculusSDK/LibOVR/Include -DOVR_LIBRARY=%APPVEYOR_BUILD_FOLDER%/OculusSDK/LibOVR/Lib/Windows/Win32/Release/VS2013/LibOVR.lib -DWITH_OVR=ON -DBUILD_TESTS=ON -DBUILD_STATIC=%BUILD_STATIC% -G Ninja
- cmake --build .
- cmake --build . --target install
- cmake . -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%/Deploy -DBUILD_TESTS=OFF
- cmake --build . --target install
- cd ../Deploy
- 7z a ../magnum-integration-compatibility.zip *
test_script:
- cd %APPVEYOR_BUILD_FOLDER%/build
- SET fail=0
- ctest --output-on-failure || SET fail=1 & ver > nul
- cd %APPVEYOR_BUILD_FOLDER%
- appveyor PushArtifact magnum-integration-compatibility.zip
- exit %fail%
